name: pjsip for Windows with ffmpeg and openssl
on:
  push: 
    branches: [ main, develop ]
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  default-x86:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: get swig
      run: Invoke-WebRequest -Uri "https://github.com/pjsip/third_party_libs/raw/main/swigwin-4.1.1.zip"  -OutFile ".\swigwin.zip"
      shell: powershell
    - name: expand swig
      run: |
        Expand-Archive -LiteralPath .\swigwin.zip -DestinationPath .\swigwin\; pwd
        cd swigwin\swigwin-4.1.1
        Add-Content ..\..\swig_path.txt $pwd.Path
      shell: powershell
    - name: config site
      run:
        type nul > pjsip/pjlib/include/pj/config_site.h
      shell: cmd
    - name: MSBuild
      run: | 
        call "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        msbuild pjsip\pjproject-vs14.sln /p:PlatformToolset=v143 /p:Configuration=Debug /p:Platform=win32
      shell: cmd
    - name: build csharp swig
      run: |
        set /P SWIG_PATH=<swig_path.txt
        set PATH=%PATH%;%SWIG_PATH%
        dir pjsip/pjlib/include/pj/config_site.h
        type pjsip/pjlib/include/pj/config_site.h
        call "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" 
        cd pjsip/pjsip-apps/build
        msbuild swig_csharp_pjsua2.vcxproj /p:PlatformToolset=v143 /p:Configuration=Debug /p:Platform=win32 /p:UseEnv=true
      shell: cmd
    - name: build java swig
      run: |
        set /P SWIG_PATH=<swig_path.txt
        set PATH=%PATH%;%SWIG_PATH%
        dir pjsip/pjlib/include/pj/config_site.h
        type pjsip/pjlib/include/pj/config_site.h
        call "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        cd pjsip/pjsip-apps/build
        msbuild swig_java_pjsua2.vcxproj /p:PlatformToolset=v143 /p:Configuration=Debug /p:Platform=win32 /p:UseEnv=true
      shell: cmd
    - uses: actions/upload-artifact@v3
      with:
        name: pjsua2-dll_win-x86
        path: ${{ github.workspace }}

  with-ssl-x86:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: get openssl
      run: Invoke-WebRequest -Uri "https://github.com/pjsip/third_party_libs/raw/main/openssl-1.1.1s-win.zip" -OutFile ".\openssl.zip"
      shell: powershell
    - name: expand openssl
      run: |
        Expand-Archive -LiteralPath .\openssl.zip -DestinationPath .;
        cd openssl_build
        Add-Content ..\openssl_dir.txt $pwd.Path
      shell: powershell
    - name: check openssl folder
      run: |
        set /P OPENSSL_DIR=<openssl_dir.txt
        dir %OPENSSL_DIR%\include
        dir %OPENSSL_DIR%\lib
      shell: cmd
    - name: config site
      run:
        cd pjsip/pjlib/include/pj; cp config_site_test.h config_site.h; Add-Content config_site.h "#define PJ_HAS_SSL_SOCK 1"
      shell: powershell
    - name: check VsDevCmd.bat
      run: dir "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
      shell: cmd
    - name: MSBuild
      working-directory: .
      run: |
        set /P OPENSSL_DIR=<openssl_dir.txt
        call "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        set INCLUDE=%INCLUDE%;%OPENSSL_DIR%\include
        set LIB=%LIB%;%OPENSSL_DIR%\lib
        msbuild pjsip/pjproject-vs14.sln /p:PlatformToolset=v143 /p:Configuration=Release /p:Platform=win32 /p:UseEnv=true
      shell: cmd
  
    - name: build csharp swig
      run: |
        set /P SWIG_PATH=<swig_path.txt
        set PATH=%PATH%;%SWIG_PATH%
        dir pjsip/pjlib/include/pj/config_site.h
        type pjsip/pjlib/include/pj/config_site.h
        call "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" 
        cd pjsip/pjsip-apps/build
        msbuild swig_csharp_pjsua2.vcxproj /p:PlatformToolset=v143 /p:Configuration=Debug /p:Platform=win32 /p:UseEnv=true
      shell: cmd
    - name: build java swig
      run: |
        set /P SWIG_PATH=<swig_path.txt
        set PATH=%PATH%;%SWIG_PATH%
        dir pjsip/pjlib/include/pj/config_site.h
        type pjsip/pjlib/include/pj/config_site.h
        call "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        cd pjsip/pjsip-apps/build
        msbuild swig_java_pjsua2.vcxproj /p:PlatformToolset=v143 /p:Configuration=Debug /p:Platform=win32 /p:UseEnv=true
      shell: cmd
    - uses: actions/upload-artifact@v3
      with:
        name: pjsua2-ssl-dll_win-x86
        path: ${{ github.workspace }}

  
  with-ffmpeg:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: get ffmpeg
      run: Invoke-WebRequest -Uri "https://github.com/pjsip/third_party_libs/raw/main/ffmpeg-5.1.2-win.zip" -Outfile "ffmpeg.zip"
      shell: powershell
    - name: expand ffmpeg
      run: |
        Expand-Archive -LiteralPath .\ffmpeg.zip -DestinationPath .; pwd
        cd ffmpeg_build
        Add-Content ..\ffmpeg_dir.txt $pwd.Path
      shell: powershell
    - name: check ffmpeg folder
      run: |
        set /P FFMPEG_DIR=<ffmpeg_dir.txt
        dir "%FFMPEG_DIR%\include"
        dir "%FFMPEG_DIR%\lib"
      shell: cmd
    - name: get sdl
      run: Invoke-WebRequest -Uri "https://github.com/libsdl-org/SDL/releases/download/release-2.26.2/SDL2-devel-2.26.2-VC.zip" -Outfile ".\sdl.zip"
      shell: powershell
    - name: expand sdl
      run: |
        Expand-Archive -LiteralPath .\sdl.zip -DestinationPath .\sdl_build\; pwd
        cd sdl_build\SDL2-2.26.2
        Add-Content ..\..\sdl_dir.txt $pwd.Path
      shell: powershell
    - name: check sdl folder
      run: |
        set /P SDL_DIR=<sdl_dir.txt
        dir "%SDL_DIR%\include\SDL"
        dir "%SDL_DIR%\lib\x86"
      shell: cmd
    - name: config site
      run: |
        echo "" > pjsip\pjlib\include\pj\config_site.h
        Add-Content config_site.h "#define PJMEDIA_HAS_VIDEO 1"
        Add-Content config_site.h "#define PJMEDIA_HAS_FFMPEG 1"
        Add-Content config_site.h "#define PJMEDIA_HAS_FFMPEG_VID_CODEC 1"
        Add-Content config_site.h "#define PJMEDIA_VIDEO_DEV_HAS_FFMPEG 1"
        Add-Content config_site.h "#define PJMEDIA_VIDEO_DEV_HAS_SDL 1"
      shell: powershell
    - name: check VsDevCmd.bat
      run: dir "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
      shell: cmd
    - name: MSBuild
      working-directory: .
      run: |
        set /P FFMPEG_DIR=<ffmpeg_dir.txt        
        set /P LIBSDL_DIR=<sdl_dir.txt
        call "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        set INCLUDE=%INCLUDE%;%LIBFFMPEG_DIR%\include;%SDL_DIR%\include
        set LIB=%LIB%;%FFMPEG_DIR%\lib;%SDL_DIR%\lib\x86
        msbuild pjsip/pjproject-vs14.sln /p:PlatformToolset=v143 /p:Configuration=Release /p:Platform=win32 /p:UseEnv=true
      shell: cmd
    - uses: actions/upload-artifact@v3
      with:
        name: pjsua2-ffmpeg-dll_win-x86
        path: ${{ github.workspace }}
    
  with-ffmpeg-ssl-x86:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: get ffmpeg
      run: Invoke-WebRequest -Uri "https://github.com/pjsip/third_party_libs/raw/main/ffmpeg-5.1.2-win.zip" -Outfile "ffmpeg.zip"
      shell: powershell
    - name: expand ffmpeg
      run: |
        Expand-Archive -LiteralPath .\ffmpeg.zip -DestinationPath .; pwd
        cd ffmpeg_build
        Add-Content ..\ffmpeg_dir.txt $pwd.Path
      shell: powershell
    - name: check ffmpeg folder
      run: |
        set /P FFMPEG_DIR=<ffmpeg_dir.txt
        dir "%FFMPEG_DIR%\include"
        dir "%FFMPEG_DIR%\lib"
      shell: cmd
    - name: get sdl
      run: Invoke-WebRequest -Uri "https://github.com/libsdl-org/SDL/releases/download/release-2.26.2/SDL2-devel-2.26.2-VC.zip" -Outfile ".\sdl.zip"
      shell: powershell
    - name: expand sdl
      run: |
        Expand-Archive -LiteralPath .\sdl.zip -DestinationPath .\sdl_build\; pwd
        cd sdl_build\SDL2-2.26.2
        Add-Content ..\..\sdl_dir.txt $pwd.Path
      shell: powershell
    - name: check sdl folder
      run: |
        set /P SDL_DIR=<sdl_dir.txt
        dir "%SDL_DIR%\include\SDL"
        dir "%SDL_DIR%\lib\x86"
      shell: cmd
    - name: get openssl
      run: Invoke-WebRequest -Uri "https://github.com/pjsip/third_party_libs/raw/main/openssl-1.1.1s-win.zip" -OutFile ".\openssl.zip"
      shell: powershell
    - name: expand openssl
      run: |
        Expand-Archive -LiteralPath .\openssl.zip -DestinationPath .;
        cd openssl_build
        Add-Content ..\openssl_dir.txt $pwd.Path
      shell: powershell
    - name: check openssl folder
      run: |
        set /P OPENSSL_DIR=<openssl_dir.txt
        dir %OPENSSL_DIR%\include
        dir %OPENSSL_DIR%\lib
      shell: cmd
    - name: config site
      run: |
        echo "" > pjsip\pjlib\include\pj\config_site.h
        Add-Content config_site.h "#define PJMEDIA_HAS_VIDEO 1"
        Add-Content config_site.h "#define PJMEDIA_HAS_FFMPEG 1"
        Add-Content config_site.h "#define PJMEDIA_HAS_FFMPEG_VID_CODEC 1"
        Add-Content config_site.h "#define PJMEDIA_VIDEO_DEV_HAS_FFMPEG 1"
        Add-Content config_site.h "#define PJMEDIA_VIDEO_DEV_HAS_SDL 1"
        Add-Content config_site.h "#define PJ_HAS_SSL_SOCK 1"
      shell: powershell
    - name: check VsDevCmd.bat
      run: dir "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
      shell: cmd
    - name: MSBuild
      working-directory: .
      run: |
        set /P FFMPEG_DIR=<ffmpeg_dir.txt        
        set /P LIBSDL_DIR=<sdl_dir.txt
        set /P OPENSSL_DIR=<openssl_dir.txt
        call "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        set INCLUDE=%INCLUDE%;%LIBFFMPEG_DIR%\include;%SDL_DIR%\include;%OPENSSL_DIR%\include
        set LIB=%LIB%;%FFMPEG_DIR%\lib;%SDL_DIR%\lib\x86;%LIB%;%OPENSSL_DIR%\lib
        msbuild pjsip\pjproject-vs14.sln /p:PlatformToolset=v143 /p:Configuration=Release /p:Platform=win32 /p:UseEnv=true
      shell: cmd
    - uses: actions/upload-artifact@v3
      with:
        name: pjsua2-ssl-ffmpeg-dll_win-x86
        path: ${{ github.workspace }}