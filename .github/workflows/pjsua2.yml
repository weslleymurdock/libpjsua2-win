name: pjsip for Windows with ffmpeg and openssl
on:
  push: 
    branches: [ main, develop ]
  pull_request:
    types: [opened, synchronize, reopened]

env:
  swig-url: 'https://github.com/pjsip/third_party_libs/raw/main/swigwin-4.1.1.zip'
  
jobs:
  default:     
    runs-on: windows-latest 
    steps: 
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: VS2015
      shell: powershell
      run: |
        VS_BTOOLS_EXE="vs_buildtools.exe"
        $VS_BTOOLS_URI="https://aka.ms/vs/15/release/vs_buildtools.exe"
        Invoke-WebRequest -Uri $VS_BTOOLS_URI -OutFile $VS_BTOOLS_EXE
        Start-Process -FilePath ./vs_buildtools.exe -ArgumentList "--add", "Microsoft.VisualStudio.Component.VC.140", "--add", "Microsoft.VisualStudio.Component.Windows81SDK", "--quiet", "--norestart", "--force", "--wait" -Wait -PassThru


    - name: get swig
      run: Invoke-WebRequest -Uri ${{ env.swig-url }}  -OutFile ".\swigwin.zip"
      shell: powershell
    - name: expand swig
      run: |
        Expand-Archive -LiteralPath .\swigwin.zip -DestinationPath .; pwd
        cd swigwin-4.1.1
        Add-Content ..\swig_path.txt $pwd.Path
      shell: powershell 
    - name: config site
      run: cp ${{github.workspace}}\x86\config_site.h ${{github.workspace}}\pjsip\pjlib\include\pj\
      shell: powershell
    
    - name: build csharp swig
      run: |
        set /P SWIG_PATH=<swig_path.txt
        set PATH=%PATH%;%SWIG_PATH% 
        cd pjsip/pjsip-apps/build 
        call "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" 
        msbuild swig_csharp_pjsua2.vcxproj /p:PlatformToolset=v143 /p:Configuration=Release /p:Platform=win32 /p:UseEnv=true /p:OutDir=..\src\swig\csharp\output\ /p:TargetName=pjsua2 /p:TargetExt=.dll
      shell: cmd
    - uses: actions/upload-artifact@v3
      with:
        name: pjsua2.dll
        path: ${{ github.workspace }}/pjsip/pjsip-apps/src/swig/csharp/

  with-ssl:     
    runs-on: windows-latest 
    
    steps: 
    - uses: actions/checkout@v4
      with:
          submodules: recursive
    
    - name: VS2015
      shell: powershell
      run: |
        VS_BTOOLS_EXE="vs_buildtools.exe"
        $VS_BTOOLS_URI="https://aka.ms/vs/15/release/vs_buildtools.exe"
        Invoke-WebRequest -Uri $VS_BTOOLS_URI -OutFile $VS_BTOOLS_EXE
        Start-Process -FilePath ./vs_buildtools.exe -ArgumentList "--add", "Microsoft.VisualStudio.Component.VC.140", "--add", "Microsoft.VisualStudio.Component.Windows81SDK", "--quiet", "--norestart", "--force", "--wait" -Wait -PassThru
    
    - name: get swig
      run: Invoke-WebRequest -Uri ${{ env.swig-url }}  -OutFile ".\swigwin.zip"
      shell: powershell
    - name: expand swig
      run: |
        Expand-Archive -LiteralPath .\swigwin.zip -DestinationPath .; pwd
        cd swigwin-4.1.1
        Add-Content ..\swig_path.txt $pwd.Path
      shell: powershell
    - name: get openssl
      run: Invoke-WebRequest -Uri "https://github.com/pjsip/third_party_libs/raw/main/openssl-1.1.1s-win.zip" -OutFile ".\openssl.zip"
      shell: powershell
    - name: expand openssl
      run: |
        Expand-Archive -LiteralPath .\openssl.zip -DestinationPath .; pwd
        cd openssl_build
        Add-Content ..\openssl_dir.txt $pwd.Path
      shell: powershell
    - name: config site
      run:  cp ${{github.workspace}}\ssl-x86\config_site.h ${{github.workspace}}\pjsip\pjlib\include\pj\
      shell: powershell 
    # - name: MSBuild
    #   working-directory: .
    #   run: |
    #     set /P OPENSSL_DIR=<openssl_dir.txt
    #     call "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
    #     set INCLUDE=%INCLUDE%;%OPENSSL_DIR%\include
    #     set LIB=%LIB%;%OPENSSL_DIR%\lib
    #     msbuild ${{github.workspace}}\pjsip\pjproject-vs14.sln /p:PlatformToolset=v143 /p:Configuration=Release-Dynamic /p:Platform=win32 /p:UseEnv=true
    #   shell: cmd
    - name: replace  
      uses: Nambers/ReplaceStringInFile@v1.3
      with: 
        path: ${{ github.workspace }}/pjsip/pjsip-apps/build/swig_csharp_pjsua2.vcxproj
        oldString: ProjectReference Include
        oldStringWin: ProjectReference Include
        newString: ProjectReference SetConfiguration=\"Configuration=Release-Dynamic\" Include 
        newStringWin: ProjectReference SetConfiguration=\"Configuration=Release-Dynamic\" Include 
        showFileContent: true
    - name: build csharp swig
      run: |
        set /P OPENSSL_DIR=<openssl_dir.txt
        set /P SWIG_PATH=<swig_path.txt
        set PATH=%PATH%;%SWIG_PATH%  
        set INCLUDE=%INCLUDE%;%OPENSSL_DIR%\include
        set LIB=%LIB%;%OPENSSL_DIR%\lib
        cd pjsip/pjsip-apps/build 
        call "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" 
        msbuild swig_csharp_pjsua2.vcxproj /p:PlatformToolset=v143 /p:Configuration=Release /p:Platform=win32 /p:UseEnv=true /p:OutDir=..\src\swig\csharp\output\ /p:TargetName=pjsua2 /p:TargetExt=.dll
      shell: cmd
    - uses: actions/upload-artifact@v3
      with:
        name: pjsua2.dll
        path: ${{ github.workspace }}/pjsip/pjsip-apps/src/swig/csharp
        
  
    